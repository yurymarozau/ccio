services:
  web-ui:
    container_name: web-ui
    image: ccio-web-ui
    platform: linux/amd64
    build:
      context: ./code/frontend
      args:
        APP_USER: ${APP_USER}
        APP_DIR: ${APP_DIR}
    volumes:
      - node_modules:${APP_DIR}/node_modules
      - ./code/frontend/:${APP_DIR}/
    env_file: ./.env
    entrypoint: []
    command: ['./scripts/start_local.sh']
    ports:
      - '5173:5173'

  api:
    container_name: api
    image: ccio-api
    platform: linux/amd64
    build:
      context: ./code/backend
      args:
        APP_USER: ${APP_USER}
        APP_DIR: ${APP_DIR}
    volumes:
      - ./code/backend/src/:${APP_DIR}/
    env_file: ./.env
    command: ['./scripts/start_local.sh']
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis

  redis:
    container_name: redis
    image: redis:7.4-alpine
    platform: linux/amd64
    command: --port ${REDIS_PORT}
    volumes:
      - redis_data:/data
    env_file: ./.env
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'

  db:
    container_name: db
    image: postgres:16.4-alpine
    platform: linux/amd64
    command: -p ${DATABASE_PORT}
    shm_size: 2g
    privileged: true
    volumes:
      - ./code/backend/db/$DATABASE_ENVIRONMENT:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    env_file: ./.env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_HOST=${DATABASE_HOST}
      - POSTGRES_PORT=${DATABASE_PORT}
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'

  db-migrator:
    container_name: db-migrator
    image: ccio-api
    platform: linux/amd64
    build:
      context: ./code/backend
    volumes:
      - ./code/backend/src/:${APP_DIR}/
    env_file: ./.env
    command: ['./scripts/migrate.sh']
    depends_on:
      - db
      - redis

  worker:
    container_name: worker
    image: ccio-api
    platform: linux/amd64
    build:
      context: ./code/backend
    volumes:
      - ./code/backend/src/:${APP_DIR}/
    env_file: ./.env
    command: ['celery', '-A', 'config.celery', 'worker', '-Q', 'low']
    depends_on:
      - db
      - redis

  beat:
    container_name: beat
    image: ccio-api
    platform: linux/amd64
    build:
      context: ./code/backend
    volumes:
      - ./code/backend/src/:${APP_DIR}/
    env_file: ./.env
    command: ['celery', '-A', 'config.celery', 'beat', '-l', 'INFO']
    depends_on:
      - db
      - redis

  flower:
    container_name: flower
    image: ccio-api
    platform: linux/amd64
    build:
      context: ./code/backend
    volumes:
      - ./code/backend/src/:${APP_DIR}/
    env_file: ./.env
    command: ['celery', '-A', 'config.celery.celery', 'flower']
    ports:
      - '5555:5555'
    depends_on:
      - redis

  test:
    container_name: test
    image: ccio-api
    platform: linux/amd64
    build:
      context: ./code/backend
    volumes:
      - ./code/backend/src/:${APP_DIR}/
    env_file: ./.env
    command: ['pytest']
    depends_on:
      - db
      - redis

volumes:
  db_data:
    name: ccio_db_data_$DATABASE_ENVIRONMENT
  redis_data:
  node_modules:
